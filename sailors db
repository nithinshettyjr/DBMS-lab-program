create database sailors;
use sailors;
create table if not exists Sailors (
sid int primary key,
sname varchar (35) not null,
rating float not null,
age int not null
);
create table if not exists Boat (
bid int primary key,
bname varchar (35) not null,
color varchar (25) not null
);
create table if not exists reserves (
sid int not null,
bid int not null,
sdate date not null,
foreign key (sid) references Sailors(sid) on delete cascade,
foreign key (bid) references Boat(bid) on delete cascade
);
insert into Sailors values
(1,"Albert", 5.0, 40),
(2, "Nakul", 5.0, 49),
(3, "Darshan", 9, 18),
(4, "Astorm Gowda", 2, 68),
(5, "Armstormin", 7, 19);
insert into Boat values
(1,"Boat_1", "Green"),
(2,"Boat_2", "Red"),
(103,"Boat_3", "Blue"),
(104,"Boat_4","Pink");
insert into reserves values
(1,103,"2023-01-01"),
(1,2,"2023-02-01"),
(2,1,"2023-02-05"),
(3,2,"2023-03-06"),
(5,103,"2023-03-06"),
(1,1,"2023-03-06"),
(1,104,"2023-12-12");

Q1.select color
from Sailors s, Boat b, reserves r
where s.sid=r.sid and b.bid=r.bid and s.sname="Albert";
Q2.(select sid
from Sailors
where Sailors.rating>=8)
UNION
(select sid
from reserves
where reserves.bid=103);
Q3.select s.sname
from Sailors s
where s.sid not in
(select s1.sid from Sailors s1, reserves r1 where r1.sid=s1.sid and s1.sname like "%storm%")
and s.sname like "%storm%"
order by s.sname ASC;
Q4.select sname from Sailors s where not exists
(select * from Boat b where not exists
(select * from reserves r where r.sid=s.sid and b.bid=r.bid));
Q5.select sname, age
from Sailors where age in (select max(age) from Sailors);
Q6.select b.bid, avg(s.age) as average_age
from Sailors s, Boat b, reserves r
where r.sid=s.sid and r.bid=b.bid and s.age>=40
group by bid
having 2<=count(distinct r.sid);
Q6.create view ReservedBoatsWithRatedSailor as
select distinct bname, color
from Sailors s, Boat b, reserves r
where s.sid=r.sid and b.bid=r.bid and s.rating=5;
select * from ReservedBoatsWithRatedSailor;
Q7.DELIMITER //
CREATE TRIGGER PreventDelete5
BEFORE DELETE ON Boat
FOR EACH ROW
BEGIN
DECLARE res_cnt INT;
SELECT COUNT(*) INTO res_cnt
FROM reserves
WHERE bid=OLD.bid;
IF res_cnt>0 THEN
SIGNAL SQLSTATE '45000'
SET MESSAGE_TEXT='CANNOT DELETE. BOAT HAS ACTIVE RESERVATIONS.';
END IF;
END; //
DELIMITER;
delete from Boat where bid=103;//
